<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:Util="SuperMap.Web.Util.*"
			   width="987" height="626" minWidth="955" minHeight="600">
	<fx:Script>
		<![CDATA[
			import SuperMap.Web.Core.Feature3D;
			import SuperMap.Web.Core.GeoModel;
			import SuperMap.Web.Core.Point2D;
			import SuperMap.Web.Core.Point3D;
			import SuperMap.Web.Core.Rectangle2D;
			import SuperMap.Web.Realspace.AltitudeMode;
			import SuperMap.Web.Realspace.AsyncHelper;
			import SuperMap.Web.Realspace.Camera;
			import SuperMap.Web.Realspace.FlyManager;
			import SuperMap.Web.Realspace.FlyingOperator;
			import SuperMap.Web.Realspace.GlobalImage;
			import SuperMap.Web.Realspace.Layer3D;
			import SuperMap.Web.Realspace.Layer3DServicesList;
			import SuperMap.Web.Realspace.Layer3Ds;
			import SuperMap.Web.Realspace.Scene;
			import SuperMap.Web.Realspace.SceneOption;
			import SuperMap.Web.Realspace.SceneServicesList;
			import SuperMap.Web.Realspace.ScreenLayer3D;
			import SuperMap.Web.Realspace.Selection3D;
			import SuperMap.Web.Realspace.Stereo;
			import SuperMap.Web.Realspace.Sun;
			import SuperMap.Web.Realspace.TerrainLayers;
			import SuperMap.Web.Realspace.TrackingLayer3D;
			import SuperMap.Web.Realspace.Underground;
			import SuperMap.Web.UI.Action3Ds.Pan;
			import SuperMap.Web.UI.Action3Ds.Select;
			import SuperMap.Web.UI.Controls.SceneControl;
			import SuperMap.Web.Util.ApplicationManager;
			import SuperMap.Web.Util.CallBackEvent;
			import SuperMap.Web.Util.HashTable;
			import SuperMap.Web.Util.Link;
			
			import mx.events.FlexEvent;
			
			private var sceneControl:SceneControl;
			private var scene:SuperMap.Web.Realspace.Scene;
			private var sceneUrl:String="http://localhost:8090/iserver/services/components-rest/rest/realspace";
			protected function button1_clickHandler(event:MouseEvent):void
			{
				
				// TODO Auto-generated method stub
				sceneControl=new SceneControl(mySceneControl,succeed,failed);
				
			}
			private function succeed(event:CallBackEvent):void
			{
				
				scene=sceneControl.get_scene();
				//
				
				//FlyingOperator
				var flyingOperator:FlyingOperator=scene.get_flyingOperator();
				var camera:SuperMap.Web.Realspace.Camera=new SuperMap.Web.Realspace.Camera(110,40,5000000.0);
				//flyingOperator.flyToBounds(new Rectangle2D(110,35,111,36),5000);
				flyingOperator.flyTo(camera,5000);
				//ExternalInterface.call("kongzhidiv","sdf");
				
				
			}
			
			private function failed(event:CallBackEvent):void
			{
				
			}
			protected function button2_clickHandler(event:MouseEvent):void
			{
				scene.open(sceneUrl,"scene");
				var flyingOperator:FlyingOperator=scene.get_flyingOperator();
				var camera:SuperMap.Web.Realspace.Camera=new SuperMap.Web.Realspace.Camera(116.348,40,1000.0);
				flyingOperator.flyTo(camera,5000);
			}
			
			
			
			protected function button3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				scene.viewEntire();
			}
			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				scene.refresh();
			}
			protected function button5_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var panAction:Pan=new Pan(sceneControl);
				sceneControl.set_sceneAction(panAction);
			}
			protected function button6_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var selectAction:Select=new Select(sceneControl);
				sceneControl.set_sceneAction(selectAction);
			}
			protected function button7_clickHandler(event:MouseEvent):void
			{
				sceneControl.addEvent("objectSelected", handler);
			}
			private function handler(event:CallBackEvent):void
			{
				var selection3Ds:Array=event.data as Array;
				for(var i:Number=0;i<selection3Ds.length;i++)
				{
					//获取选择集中被选中对象的数目
					var selectCount:Number = selection3Ds[i].get_count();
					for(var j:Number=0;j<selectCount;j++)
					{
						//获取选择集
						var selection3D:Selection3D = selection3Ds[i];
						var layer3D:Layer3D=selection3D.get_layer3D();
						var layerName:String=layer3D.get_name();
						var layer3Ds:Layer3Ds=scene.get_layer3Ds();
						//用名称来获取
						var layer3D1:Layer3D=layer3Ds.get_item(layerName);//测试到此处
						var layer3D2:Layer3D=layer3Ds.get_item(0);
						
						var id:Number=selection3D.get_item(j);
						var feature:Feature3D=layer3D1.findFeature3DByID(id);
						var selectObjectName:String=feature.get_name();
						showResult.text="当前选择的对象的ID为："+id;
					}
				}
			}
			protected function button8_clickHandler(event:MouseEvent):void
			{
				sceneControl.removeEvent("objectSelected", handler);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button x="40" y="11" label="加载球" click="button1_clickHandler(event)"/>
	<s:Button x="113" y="10" label="加载场景" click="button2_clickHandler(event)"/>
	<s:Button x="191" y="11" label="全副显示" click="button3_clickHandler(event)"/>
	<s:Button x="280" y="11" label="刷新场景" click="button4_clickHandler(event)" />
	<s:Button x="358" y="10" label="漫游" click="button5_clickHandler(event)" />
	<s:Button x="436" y="10" label="选择" click="button6_clickHandler(event)"/>
	<s:Button x="514" y="10" label="注册事件" click="button7_clickHandler(event)"/>
	<s:Label id="showResult" x="609" y="19" text="当前选择的对象的ID为："/>
	<Util:SceneDiv id="mySceneControl" x="10" y="52" width="967" height="565">
	</Util:SceneDiv>
	<s:Button x="763" y="10" label="取消事件" click="button8_clickHandler(event)"/>
</s:Application>
